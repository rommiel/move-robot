{"version":3,"sources":["boxComponent.js","App.js","serviceWorker.js","index.js"],"names":["Box","getFace","bind","face","className","this","props","x","value","y","React","Component","App","state","handleOpen","handleClose","handleConfirm","handleMove","handleRight","handleLeft","handleReport","reportClose","setState","parseInt","document","getElementById","alert","showButton","box","entries","index","push","key","style","marginTop","start","Button","variant","onClick","marginLeft","color","width","height","margin","fontSize","Modal","open","isOpen","onClose","htmlFor","type","min","max","id","name","reportOpen","disableBackdropClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4396fc7f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\n\r\n\r\nclass Box extends React.Component {\r\n  constructor(){\r\n    super()\r\n    this.getFace = this.getFace.bind(this)\r\n  }\r\n\r\n\r\n  getFace(face){\r\n    switch(face){\r\n      case 'north': {\r\n        return(<ArrowUpwardIcon/>)\r\n      }\r\n      case 'east': {\r\n        return(<ArrowForwardIcon/>)\r\n      }\r\n      case 'west': {\r\n        return(<ArrowBackIcon/>)\r\n      }\r\n      case 'south': {\r\n        return(<ArrowDownwardIcon/>)\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n    render(){\r\n        return(\r\n            <div className={\r\n              (this.props.x == this.props.value.x && this.props.y == this.props.value.y)?\r\n              'selected box' : 'box'\r\n            }>\r\n              <span>{this.props.value.x},</span>\r\n              <span>{this.props.value.y}</span>\r\n              <div className=\"arrowHolder\">\r\n                {(this.props.x == this.props.value.x && this.props.y == this.props.value.y)?\r\n                  this.getFace(this.props.face) : null\r\n                }\r\n              </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Box","import React from 'react';\nimport './App.css';\nimport Box from './boxComponent';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\n\nclass App extends React.Component {\n  constructor(){\n    super()\n\n    this.state = {\n      face: 'north',\n      x: null,\n      y: null,\n      face: null,\n      isOpen: false,\n      showButton: false,\n      reportOpen: false,\n      start: false,\n      box: [\n        {x:0,y:4},\n        {x:1,y:4},\n        {x:2,y:4},\n        {x:3,y:4},\n        {x:4,y:4},//1\n        {x:0,y:3},\n        {x:1,y:3},\n        {x:2,y:3},\n        {x:3,y:3},\n        {x:4,y:3},//2\n        {x:0,y:2},\n        {x:1,y:2},\n        {x:2,y:2},\n        {x:3,y:2},\n        {x:4,y:2},//3\n        {x:0,y:1},\n        {x:1,y:1},\n        {x:2,y:1},\n        {x:3,y:1},\n        {x:4,y:1},//4\n        {x:0,y:0},\n        {x:1,y:0},\n        {x:2,y:0},\n        {x:3,y:0},\n        {x:4,y:0},//5\n      ]\n    }\n\n    this.handleOpen = this.handleOpen.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n    this.handleConfirm = this.handleConfirm.bind(this)\n    this.handleMove = this.handleMove.bind(this)\n    this.handleRight = this.handleRight.bind(this)\n    this.handleLeft = this.handleLeft.bind(this)\n    this.handleReport = this.handleReport.bind(this)\n    this.reportClose = this.reportClose.bind(this)\n  }\n\n  handleOpen(){\n    this.setState({'isOpen': true})\n  }\n\n  handleClose(){\n    this.setState({'isOpen': false})\n  }\n\n  handleConfirm(){\n    this.setState({'isOpen': false})\n    let x = parseInt(document.getElementById('inputx').value)\n    let y = parseInt(document.getElementById('inputy').value)\n    let face = document.getElementById('face').value\n    if(!x)\n      x = 0\n    if(!y)\n      y = 0\n\n    if((x<0 || x>4) || (y<0 || y>4))\n      alert(\"invalid values\")  \n    else \n      this.setState({\n        'x': x,\n        'y': y,\n        'face': face,\n        showButton: true\n      })\n  }\n\n\n  handleMove(){\n    let x = this.state.x\n    let y = this.state.y\n    let face = this.state.face\n\n    if(x == 0 && face == 'west'){\n     alert(\"Robot will fall. Action not permitted!\")\n    }\n    else if(x == 4 && face == 'east'){\n     alert(\"Robot will fall. Action not permitted!\")\n    }\n    else if(y == 0 && face == 'south'){\n     alert(\"Robot will fall. Action not permitted!\")\n    }\n    else if(y == 4 && face == 'north'){\n     alert(\"Robot will fall. Action not permitted!\")\n    }\n    else{\n      switch(face){\n        case 'north': {\n                      this.setState({'y': y+1})\n                      break;\n                    }\n        case 'east': {\n                      this.setState({'x': x+1})\n                      break;\n                    }\n        case 'south': {\n                      this.setState({'y': y-1})\n                      break;\n                    }\n        case 'west': {\n                      this.setState({'x': x-1})\n                      break;\n                    }\n        default: break;\n      }\n    }\n  }\n\n  handleRight(){\n    let face = this.state.face\n    switch(face){\n      case 'north': {\n                    this.setState({'face': 'east'})\n                    break;\n                  }\n      case 'east': {\n                    this.setState({'face': 'south'})\n                    break;\n                  }\n      case 'south': {\n                    this.setState({'face': 'west'})\n                    break;\n                  }\n      case 'west': {\n                    this.setState({'face': 'north'})\n                    break;\n                  }\n      default: break;\n    }\n  }\n\n  handleLeft(){\n    let face = this.state.face\n    switch(face){\n      case 'north': {\n                    this.setState({'face': 'west'})\n                    break;\n                  }\n      case 'west': {\n                    this.setState({'face': 'south'})\n                    break;\n                  }\n      case 'south': {\n                    this.setState({'face': 'east'})\n                    break;\n                  }\n      case 'east': {\n                    this.setState({'face': 'north'})\n                    break;\n                  }\n      default: break;\n    }\n  }\n\n  handleReport(){\n    this.setState({'reportOpen': true})\n  }\n\n  reportClose(){\n    this.setState({\n      'x':null,\n      'y':null,\n      'face':null,\n      'showButton':false,\n      'reportOpen': false\n    })\n  }\n\n\n  render(){\n    const box = []\n\n    for(const [index, value] of this.state.box.entries()){\n      box.push(<Box value={value} key={index} index={index} face={this.state.face} x={this.state.x} y={this.state.y}/>)\n    }\n\n    return (\n      <div className=\"container\">\n        <h1 style={{marginTop: '50px'}}>Move Robot</h1>\n              \n      {\n        this.state.start?\n        <div>\n            <div className=\"box-container\">\n            {box}\n            </div>\n\n            <Button variant=\"contained\" onClick={this.handleOpen} style={{marginTop: '20px'}}>\n              Place Robot\n            </Button>\n            {\n            this.state.showButton?\n              <span>\n                <Button variant=\"contained\" onClick={this.handleMove} style={{marginTop: '20px', marginLeft: '20px'}}>\n                  MOVE\n                </Button>\n                <Button variant=\"contained\" onClick={this.handleLeft} style={{marginTop: '20px', marginLeft: '20px'}}>\n                  LEFT\n                </Button>\n                <Button variant=\"contained\" onClick={this.handleRight} style={{marginTop: '20px', marginLeft: '20px'}}>\n                  RIGHT\n                </Button>\n                <Button variant=\"contained\" onClick={null} style={{marginTop: '20px', marginLeft: '20px'}}\n                  onClick={this.handleReport}\n                >\n                  REPORT\n                </Button>\n              </span>\n              :\n              null\n            }  \n        </div>\n        :\n        <Button onClick={()=>this.setState({'start': true})} variant=\"contained\" color=\"primary\" style={{width: '90%', height: '100px', margin: '20px auto 20px', fontSize: '35px'}}>START</Button>\n      }\n\n          <h6 style={{marginTop: '20px'}}>Instructions:</h6>\n          <ul style={{fontSize: '13px'}}>\n            <li style={{marginTop: '10px'}}>Click the \"PLACE ROBOT\" button and input the POSITION where the Robot is facing, X and Y coordinates and for the Robot's starting position</li>\n            <li style={{marginTop: '10px'}}>Click *\"MOVE\" button to make the Robot move forward to the direction it face.</li>\n            <li style={{marginTop: '10px'}}>Click *\"LEFT\" or *\"RIGHT\" button to change the Robot's facing direction accordingly while retaining its current X and Y position.</li>\n            <li style={{marginTop: '10px'}}>Click *\"REPORT\" button to inform the user the current location and the direction that the Robot is currently facing.</li>\n          </ul>\n          <small style={{fontSize: '10px'}}>* This buttons will be shown upon giving the Robot's initial position.</small>\n          <br/>\n          <small style={{fontSize: '10px'}}>** After clicking REPORT button, the Robot will leave the area.</small>\n          <br/>\n          <small style={{fontSize: '10px'}}>*** If you didn't put X and Y coordinate, it will automatically place to 0,0.</small>\n\n          <Modal\n            open={this.state.isOpen}\n            onClose={this.handleClose}\n          >\n            <div className=\"paperModal\">\n              {/* <TextField id=\"inputx\" label=\"X\" type=\"number\" variant=\"outlined\" margin=\"normal\"/>\n              <TextField id=\"inputy\" label=\"Y\" type=\"number\" variant=\"outlined\" placeholder={this.state.y} margin=\"normal\"/> */}\n              <label htmlFor=\"X\">X: </label>\n              <input type=\"number\" min=\"0\" max=\"4\" id=\"inputx\"/>\n              <br/>\n              <label htmlFor=\"Y\">Y: </label>\n              <input type=\"number\" min=\"0\" max=\"4\" id=\"inputy\"/>\n              <br/>\n              <label htmlFor=\"FACING\">FACING: </label>\n              <br/>\n              <select id=\"face\" name=\"face\" className=\"width100\">\n                <option value=\"north\">North</option>\n                <option value=\"east\">East</option>\n                <option value=\"west\">West</option>\n                <option value=\"south\">South</option>\n              </select>\n              <br/>\n              <br/>\n              <Button variant=\"contained\" color=\"primary\" onClick={this.handleConfirm}>\n                confirm\n              </Button>\n            </div>\n          </Modal>\n          \n\n          <Modal\n            open={this.state.reportOpen}\n            onClose={this.reportClose}\n            disableBackdropClick\n          >\n            <div className=\"paperModal\" style={{height:'130px'}}>\n              <p>\n                Robot is on X: {this.state.x} and Y: {this.state.y} facing: {this.state.face}\n              </p>\n              <Button variant=\"contained\" color=\"secondary\" onClick={this.reportClose}>\n                CLOSE\n              </Button>\n            </div>\n          </Modal>\n        </div>\n\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}